{"version":3,"file":"service-worker.js","sources":["../../node_modules/workbox-core/_version.js","../../node_modules/workbox-core/models/messages/messages.js","../../node_modules/workbox-core/models/messages/messageGenerator.js","../../node_modules/workbox-core/_private/WorkboxError.js","../../node_modules/workbox-core/_private/assert.js","../../node_modules/workbox-core/_private/logger.js","../../node_modules/workbox-core/_private/cacheNames.js","../../node_modules/workbox-core/_private/getFriendlyURL.js","../../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../../node_modules/workbox-core/_private/Deferred.js","../../node_modules/workbox-core/models/quotaErrorCallbacks.js","../../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../../node_modules/workbox-core/_private/timeout.js","../../node_modules/workbox-strategies/_version.js","../../node_modules/workbox-strategies/StrategyHandler.js","../../node_modules/workbox-strategies/Strategy.js","../../node_modules/workbox-strategies/utils/messages.js","../../node_modules/workbox-strategies/CacheFirst.js","../../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../../node_modules/workbox-strategies/NetworkFirst.js","../../node_modules/workbox-strategies/StaleWhileRevalidate.js","../../node_modules/workbox-core/_private/waitUntil.js","../../node_modules/workbox-precaching/_version.js","../../node_modules/workbox-precaching/utils/createCacheKey.js","../../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../../node_modules/workbox-precaching/utils/printCleanupDetails.js","../../node_modules/workbox-precaching/utils/printInstallDetails.js","../../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../../node_modules/workbox-core/copyResponse.js","../../node_modules/workbox-precaching/PrecacheStrategy.js","../../node_modules/workbox-precaching/PrecacheController.js","../../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../../node_modules/workbox-routing/_version.js","../../node_modules/workbox-routing/utils/constants.js","../../node_modules/workbox-routing/utils/normalizeHandler.js","../../node_modules/workbox-routing/Route.js","../../node_modules/workbox-routing/RegExpRoute.js","../../node_modules/workbox-routing/Router.js","../../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../../node_modules/workbox-routing/registerRoute.js","../../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../../node_modules/workbox-precaching/utils/generateURLVariations.js","../../node_modules/workbox-precaching/PrecacheRoute.js","../../node_modules/workbox-precaching/addRoute.js","../../node_modules/workbox-precaching/matchPrecache.js","../../node_modules/workbox-precaching/precache.js","../../node_modules/workbox-precaching/precacheAndRoute.js","../../node_modules/workbox-cacheable-response/_version.js","../../node_modules/workbox-cacheable-response/CacheableResponse.js","../../node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","../../node_modules/workbox-routing/setCatchHandler.js","../../node_modules/workbox-core/_private/dontWaitFor.js","../../node_modules/workbox-core/_private/DBWrapper.js","../../node_modules/workbox-core/_private/deleteDatabase.js","../../node_modules/workbox-expiration/_version.js","../../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../../node_modules/workbox-expiration/CacheExpiration.js","../../node_modules/workbox-core/registerQuotaErrorCallback.js","../../node_modules/workbox-expiration/ExpirationPlugin.js","../assets/js/service-worker/service-worker.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            throw new WorkboxError('plugin-error-request-will-fetch', {\n                thrownError: err,\n            });\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, logs, handler });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return await handler.waitUntil(Promise.race(promises)) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                await networkPromise;\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            error = fetchError;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler\n            .fetchAndCachePut(request)\n            .catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    }\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        err = catchErr;\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of [Route]{@link module:workbox-routing.Route} that takes a\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof module:workbox-precaching\n * @extends module:workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    return { cacheKey };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the associated cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","import {\n  NetworkFirst,\n  StaleWhileRevalidate,\n  CacheFirst\n} from 'workbox-strategies';\nimport { precacheAndRoute, matchPrecache } from 'workbox-precaching';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response';\nimport { setCatchHandler, registerRoute} from 'workbox-routing';\n\n// Used for filtering matches based on status code, header, or both\n// Used to limit entries in cache, remove entries after a certain period of time\nimport { ExpirationPlugin } from 'workbox-expiration';\n\n// Cache page navigations (html) with a Network First strategy\nregisterRoute(\n  // Check to see if the request is a navigation to a new page\n  ({ request }) => request.mode === 'navigate',\n  // Use a Network First caching strategy\n  new NetworkFirst({\n    // Put all cached files in a cache named 'pages'\n    cacheName: 'pages',\n    plugins: [\n      // Ensure that only requests that result in a 200 status are cached\n      new CacheableResponsePlugin({\n        statuses: [200],\n      })\n    ],\n  })\n);\n\n// Cache CSS, JS, and Web Worker requests with a Stale While Revalidate strategy\nregisterRoute(\n  // Check to see if the request's destination is style for stylesheets, script for JavaScript, or worker for web worker\n  ({ request }) =>\n    request.destination === 'style' ||\n    request.destination === 'script' ||\n    request.destination === 'worker',\n  // Use a Stale While Revalidate caching strategy\n  new StaleWhileRevalidate({\n    // Put all cached files in a cache named 'assets'\n    cacheName: 'assets',\n    plugins: [\n      // Ensure that only requests that result in a 200 status are cached\n      new CacheableResponsePlugin({\n        statuses: [200],\n      })\n    ],\n  })\n);\n\n// Cache images with a Cache First strategy\nregisterRoute(\n  // Check to see if the request's destination is style for an image\n  ({ request }) => request.destination === 'image',\n  // Use a Cache First caching strategy\n  new CacheFirst({\n    // Put all cached files in a cache named 'images'\n    cacheName: 'images',\n    plugins: [\n      // Ensure that only requests that result in a 200 status are cached\n      new CacheableResponsePlugin({\n        statuses: [200],\n      }),\n      // Don't cache more than 50 items, and expire them after 30 days\n      new ExpirationPlugin({\n        maxEntries: 50,\n        maxAgeSeconds: 60 * 60 * 24 * 30, // 30 Days\n      })\n    ],\n  })\n);\n\n// Ensure your build step is configured to include /offline.html as part of your precache manifest.\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// Catch routing errors, like if the user is offline\nsetCatchHandler(async ({ event }) => {\n  // Return the precached offline page if a document is being requested\n  if (event.request.destination === 'document') {\n    return matchPrecache('/offline.html');\n  }\n\n  return Response.error();\n});\n"],"names":["self","_","e","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","origin","fallback","code","args","msg","length","generatorFunction","details","messageGenerator","process","env","NODE_ENV","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","getFriendlyURL","urlObj","URL","String","location","href","replace","RegExp","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","request","matchOptions","strippedRequestURL","match","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","Promise","resolve","reject","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","Request","StrategyHandler","strategy","options","_cacheKeys","assert","event","ExtendableEvent","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","Map","plugin","set","waitUntil","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","err","pluginFilteredRequest","fetchResponse","undefined","fetchOptions","response","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","params","state","get","statefulCallback","statefulParam","push","doneWaiting","shift","destroy","pluginsUsed","Strategy","handle","responseDone","handleAll","handler","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","CacheFirst","logs","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","some","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","id","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","StaleWhileRevalidate","fetchAndCachePromise","catch","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","cachedResponseWillBeUsed","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","modifier","responseURL","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","index","entries","defaultPrecacheCacheabilityPlugin","splice","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","bind","activate","addToCacheList","_installAndActiveListenersAdded","addEventListener","urlsToWarnAbout","cacheMode","has","integrity","warningMessage","installReportPlugin","credentials","all","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","defaultMethod","validMethods","normalizeHandler","Route","setCatchHandler","catchHandler","RegExpRoute","regExp","result","exec","slice","Router","_routes","_defaultHandlerMap","routes","addFetchListener","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","map","ports","then","postMessage","protocol","startsWith","sameOrigin","route","findMatchingRoute","debugMessages","forEach","_catchHandler","catchErr","matchResult","setDefaultHandler","registerRoute","unregisterRoute","routeIndex","indexOf","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","precacheAndRoute","CacheableResponse","config","statuses","_statuses","_headers","isResponseCacheable","cacheable","headerName","logFriendlyHeaders","CacheableResponsePlugin","_cacheableResponse","dontWaitFor","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","openRequestTimedOut","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","_getId","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","CacheExpiration","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","_timestampModel","Date","now","urlsExpired","updateTimestamp","isURLExpired","expireOlderThan","Infinity","registerQuotaErrorCallback","add","ExpirationPlugin","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","isNaN","destination","__WB_MANIFEST"],"mappings":"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"}